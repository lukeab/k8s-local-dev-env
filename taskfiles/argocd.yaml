# https://taskfile.dev

version: '3'
tasks:

  setup_argo_helm_repo:
    cmds:
      - |
        if ! helm repo list |grep -q argoproj.github.io/argo-helm ; then
          helm repo add argo https://argoproj.github.io/argo-helm
        fi
        #TODO: only do repo update if current copy of repo packages is too old
        helm repo update argo # add a few more, eg. jetstack,prometheus-community, grafana,...
    internal: true
    silent: true

  setup_argocd:
    deps: [setup_argo_helm_repo]
    cmds:
      - |
        helm upgrade -i -n argocd --create-namespace argocd argo/argo-cd --version 5.20.1 -f helm/argocd/values.yaml \
          --set "server.ingress.hosts[0]=argocd.{{.CLUSTER_NAME}}.{{.LOCAL_DEV_DNS_SUFFIX}}"\
          --set "server.ingress.tls[0].hosts[0]=argocd.{{.CLUSTER_NAME}}.{{.LOCAL_DEV_DNS_SUFFIX}}"\
          --set "configs.cm.url=argocd.{{.CLUSTER_NAME}}.{{.LOCAL_DEV_DNS_SUFFIX}}"
      - echo "Helm setep complete"
      ## this looks like it can fail as the secret isn't created yet - might need to visit login page for secret to be created
      - |
        #request argocd page to see if this prompts creating the initial admin password secret
        echo "Waiting for argocd initial password to be created"
        sleep 5
        while ! kubectl get secret -n argocd argocd-initial-admin-secret >/dev/null 2>&1; do (echo -n "." ; sleep 1); done
        echo
        echo "Login at https://argocd.{{.CLUSTER_NAME}}.{{.LOCAL_DEV_DNS_SUFFIX}} with user admin and password - "
        echo $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
      - task: argocd_cli_login
    silent: true

  argocd_cli_login:
    vars:
      ARGO_ADMIN_PASSWORD:
        sh: echo $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
      ARGOCD_SERVER_URL:
        sh: echo "$(kubectl get ingress argocd-server -n argocd --output=jsonpath='{.spec.rules[0].host}')"
    cmds: 
      - |
        echo "Waiting for {{.ARGOCD_SERVER_URL}} endpoint..."
        until curl -kI "https://{{.ARGOCD_SERVER_URL}}" &> /dev/null ; do (echo -n "." ; sleep 1) ; done
        echo
        echo "logging in to {{.ARGOCD_SERVER_URL}} with user: admin password: {{.ARGO_ADMIN_PASSWORD}}"
        until argocd login "{{.ARGOCD_SERVER_URL}}" --insecure --grpc-web --name {{.CLUSTER_NAME}} --username admin --password "{{.ARGO_ADMIN_PASSWORD}}" &> /dev/null ; do  (echo -n "." ; sleep 1); done
        echo
        echo "argocd cli logged in to {{.ARGOCD_SERVER_URL}} as admin successfully"
      - task: create_projects
    silent: true 

  create_projects: 
    cmds: 
      - argocd proj create --upsert -f argocd/base-services-project.yaml
      #- argocd app create -f argocd/serviceapps.yaml --validate false
      #- argocd app create testapp2 --repo https://github.com/lukeab/unvalidated.git --path testapp2 --dest-server https://kubernetes.default.svc --dest-namespace testapp2 --validate=false --sync-policy none --set-finalizer --sync-option CreateNamespace=true
